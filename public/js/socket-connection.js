let socket,connectionError=!1;window.addEventListener("load",function(){var o=window.location,n=o.protocol+"//"+o.host.split(":")[0];(socket=io.connect(n+":4444")).on("onPlayerConnect_s",function(o,n){playersData=o.playersData,yourData=playersData[o.id],frameRender.start(),startStreamOrientation(),createMapImage(n),controller.init(),socket.on("onRemotePlayerConnect_s",function(o){const n=o.id;playersData[n]=o}),socket.on("onPlayerDisconnect_s",function(o){delete playersData[o]}),attachSocketForUsername(),attachSocketForOrientation(),attachSocketForProjectile(),attachSocketForMapImage()}),socket.on("onPlayerReconnect_s",function(o,n){playersData=o.playersData,yourData=playersData[o.id]}),socket.on("connect_timeout",function(){}),socket.on("connect_error",function(){connectionError=!0}),socket.on("reconnect",function(){socket.emit("onPlayerReconnect_c"),connectionError=!1}),socket.on("onRemotePlayerReconnect_s",function(o){const n=playersData[o];console.log("onRemotePlayerReconnect_s",n),void 0!=n&&delete n.connectionError}),socket.on("onRemotePlayerConnectionError_s",function(o){const n=playersData[o];void 0!=n&&(n.connectionError=!0)}),socket.on("ping",function(){socket.emit("ping_c")})});
